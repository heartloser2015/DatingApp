@page "/payment/"
@inject HttpClient _client 
@inject IJSRuntime js
@attribute [Authorize]
<h3>index</h3>

@if (Paymet == null)
{
    <p><em>Loading Payment...</em></p>
}
else
{
    <table class="table">
         <thead>
                <tr>
                <th>Username</th>
                <th>Payment amount</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var Payment in Payments)
            {
                <tr>
                    <td>@Payment.Id</td>
                    <td>@Payment.email</td>
 
                    <td>
                        <a href="match/view/@User_Id" class="btn btn-primary">
                            <span class ="oi oi-credit-card"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=>Delete(User_Id))">
                            <span class ="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
       </tbody>
    </table>
}   


@code {
	private List<Payment> Payments;

	protected async override Task OnInitializedAsync()
	{
		Payments = await _client.GetFromJsonAsync<List<Match>>($"{Endpoints.PaymentEndPoint}");
	}

	async Task Delete(int makeId)
	{
		var make = Payments.First(q => q.Id == makeId);
		var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete payment? ");
		if(confirm)
		{
			await _client.DeleteAsync($"{Endpoints.PaymentEndPoint}");
			await OnInitializedAsync();
		}
	}

}